name: CI

env:
  ELIXIR_VERSION: "1.17"
  OTP_VERSION: "27"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    name: Test Coverage
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
      - name: Restore dependencies and build cache
        uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run Tests
        run: mix coveralls.github --warnings-as-errors

  tests:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      matrix:
        include:
          - { elixir: 1.16, otp: 24, ecto: 3.11 }
          - { elixir: 1.16, otp: 25, ecto: 3.11 }
          - { elixir: 1.16, otp: 26, ecto: 3.11 }
          - { elixir: 1.17, otp: 25, ecto: 3.11 }
          - { elixir: 1.17, otp: 26, ecto: 3.11 }
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Restore dependencies and build cache
        uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Run Tests
        run: mix test

  matrix-results:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Tests
    needs:
      - tests
    steps:
      - run: |
          result="${{ needs.tests.result }}"
          if [[ $result == "success" ]]; then
            exit 0
          else
            exit 1
          fi

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
      - name: Restore dependencies and build cache
        uses: actions/cache@v4
        with:
          path: |
            _build
            deps
          key: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-mix-${{ hashFiles('mix.lock') }}
          restore-keys: ${{ runner.os }}-otp-${{ steps.beam.outputs.otp-version }}-elixir-${{ steps.beam.outputs.elixir-version }}-
      - name: Restore PLT cache
        uses: actions/cache@v4
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-plt-${{ hashFiles('mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-plt-
          path: |
            .plts
      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
      - name: Compile
        run: mix compile --warnings-as-errors
      - name: Run Formatter
        run: mix format --check-formatted
      - name: Run Linter
        run: mix credo
      - name: Run Hex Audit
        run: mix hex.audit
      - name: Generate docs
        run: mix docs
      - name: Run Dialyzer
        run: mix dialyzer
